Instructions:

1. Create a Github Issue for Databricks resource(s).
2. Modify this file (see below), and then commit it back to your 'feature' branch.
3. Make a pull request for your 'feature' branch into the 'main' branch to start the workflow.

-------------type or change text in this section below-------------
hello how are you?
-------------------------------------------------------------------



  # branch-check:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     skip: ${{ steps.check.outputs.skip }}
    
  #   steps:
  #   - name: Check if it's a feature branch (if yes continue...)
  #     id: check
  #     run: |
  #       if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
  #         echo "::set-output name=skip::true"
  #       else
  #         echo "::set-output name=skip::false"
  #       fi


jobs:
  
  get_issue_in_json:
    # needs: branch-check
    # if: needs.branch-check.outputs.skip == 'false'
    runs-on: ubuntu-latest

# BODY="${{ github.event.issue.body }}"
# ISSUE_BRANCH_NAME=$(echo "$BODY" | grep -A1 'Please Enter the Github Feature Branch Name' | awk 'NR==2')
# echo "ISSUE_BRANCH_NAME=$ISSUE_BRANCH_NAME" >> $GITHUB_ENV
# echo ISSUE_BRANCH_NAME: $ISSUE_BRANCH_NAME

# Extract the branch name
#ISSUE_BRANCH_NAME=$(grep -A1 'Please Enter the Github Feature Branch Name' issue_body.txt | awk 'NR==2')

# Set as environment variable and print
# echo "ISSUE_BRANCH_NAME=$ISSUE_BRANCH_NAME" >> $GITHUB_ENV
# echo ISSUE_BRANCH_NAME: $ISSUE_BRANCH_NAME

# - name: Get issue branch name
#   id: extract_data
#   run: |
#     BODY="${{ github.event.issue.body }}"
#     ISSUE_BRANCH_NAME=$(echo "$BODY" | grep -oP "Please Enter the Github Feature Branch Name\s+\K\S+" || echo "No Match Found")
#     if [ "$ISSUE_BRANCH_NAME" == "No Match Found" ]; then
#       echo "Failed to extract branch name from the issue body."
#       exit 1
#     fi
#     echo "ISSUE_BRANCH_NAME=$ISSUE_BRANCH_NAME" >> $GITHUB_ENV
    
# - name: Fetch Terraform Json master config JSON file from the target repo
#   run: |
#     curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" -H "Accept: application/vnd.github.v3.raw" -o master_config.json \
#       "https://raw.githubusercontent.com/robert-altmiller/terraform_template/main/master_tfstate/${{ env.ISSUE_ENVIRONMENT }}/storage_credential.json"

# - name: Commit updated issue submission JSON file to Terraform Config repo
#   shell: bash
#   run: |
#     git config --global user.email "github-actions[bot]@users.noreply.github.com" && \
#     git config --global user.name "github-actions[bot]" && \
#     git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/robert-altmiller/terraform_template_config.git
#     git pull && \
#     git add issue_submission/ && \ # This line adds the whole folder
#     git commit -m 'new infrastructure submission' && \
#     git push
  