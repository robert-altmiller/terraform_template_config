name: Process Storage Credential Request

on:
  issues:
    types: [opened]

jobs:
  get_issue_in_json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Install jq
        run: sudo apt-get install jq

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/storage-credential-request.yml

      - name: Output issue parser JSON results 
        run: cat ${HOME}/issue-parser-result.json

      - name: Checkout Target Terraform Repo
        uses: actions/checkout@v2
        with:
          repository: 'robert-altmiller/terraform_template'
          token: ${{ secrets.GH_TOKEN }}

      - name: Write issue submission JSON file to local config repo and environment to environment vars
        run: |
          echo '${{ steps.issue-parser.outputs.jsonString }}' > issue_submission/issue_submission.json
          ISSUE_JSON=$(cat issue_submission/issue_submission.json)
          ISSUE_ENVIRONMENT=$(echo $ISSUE_JSON | jq -r .environment)
          echo "ISSUE_ENVIRONMENT=$ISSUE_ENVIRONMENT" >> $GITHUB_ENV

      - name: Fetch Terraform Json master config JSON file from the target repo
        run: |
          curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" -H "Accept: application/vnd.github.v3.raw" -o master_config.json \
            "https://raw.githubusercontent.com/robert-altmiller/terraform_template/main/master_tfstate/${{ env.ISSUE_ENVIRONMENT }}/storage_credential.json"

      - name: Append / Remove issue submission to / from master config JSON file
        run: |
          ISSUE_JSON=$(cat issue_submission/issue_submission.json)
          echo $ISSUE_JSON
          MASTER_CONFIG_JSON=$(cat master_config.json)
          echo $MASTER_CONFIG_JSON
          ISSUE_RESOURCE_NAME=$(echo $ISSUE_JSON | jq -r .resource_name)
          ISSUE_ACTION=$(echo $ISSUE_JSON | jq -r .create_or_delete)
          if [[ "$ISSUE_ACTION" == "Create" ]]; then
            UPDATED_MASTER_CONFIG=$(echo $MASTER_CONFIG_JSON | jq ".storage_credentials.\"$ISSUE_RESOURCE_NAME\" = $ISSUE_JSON")
          elif [[ "$ISSUE_ACTION" == "Destroy" ]]; then
            UPDATED_MASTER_CONFIG=$(echo $MASTER_CONFIG_JSON | jq "del(.storage_credentials.\"$ISSUE_RESOURCE_NAME\")")
          else
            echo "Unknown ISSUE_ACTION: $ISSUE_ACTION"
            exit 1
          fi
          echo "$UPDATED_MASTER_CONFIG" > issue_submission/issue_submission.json

      - name: Clone down the Terraform target Github repo with Terraform deployment code
        shell: bash
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com" && \
          git config --global user.name "github-actions[bot]" && \
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/robert-altmiller/terraform_template.git
          git pull


      - name: Commit updated issue submission JSON file to target Terraform repo (optional)
        shell: bash
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com" && \
          git config --global user.name "github-actions[bot]" && \
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/robert-altmiller/terraform_template.git
          git pull && \
          git add issue_submission/issue_submission.json && \
          git commit -m 'new infrastructure submission' && \
          git push

