name: Start Terraform Template Repo Composite Action to Deploy Infrastructure

on:
  pull_request:
    types:
      - closed

jobs:
  start_terraform_template_repo_composite_action:
    
    runs-on: ubuntu-latest

    steps:

      - name: Download Environment Variables Artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:  
          github_token: ${{secrets.GITHUB_TOKEN}}
          name: comp_actions_env_vars
          search_artifacts: true
          workflow_conclusion: success    

      # - name: Debug - List Workspace Contents
      #   run: ls -R ${{ github.workspace }}

      # - name: Debug - List Artifact Directory Contents
      #   run: ls -R ${{ github.workspace }}/comp_actions_env_vars
        

      # - name: Set Environment Variables from Artifact
      #   run: |
      #     source ./environment_vars.sh
      #     echo "ISSUE_BRANCH_NAME_MAIN=$ISSUE_BRANCH_NAME_MAIN" >> $GITHUB_ENV
      #     echo "ISSUE_BRANCH_NAME_MAIN: $ISSUE_BRANCH_NAME_MAIN"


      # - uses: robert-altmiller/terraform_template@main
      #   with:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
      #     AWS_REGION:  ${{ secrets.AWS_REGION }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     DATABRICKS_ACCOUNT_ID: ${{ secrets.DATABRICKS_ACCOUNT_ID }}
      #     DATABRICKS_ADMIN_LOGIN: ${{ secrets.DATABRICKS_ADMIN_LOGIN }}
      #     DATABRICKS_ADMIN_PASSWORD: ${{ secrets.DATABRICKS_ADMIN_PASSWORD }}
      #     DATABRICKS_CLIENT_ID_DEV: ${{ secrets.DATABRICKS_CLIENT_ID_DEV }}
      #     DATABRICKS_CLIENT_ID_PROD: ${{ secrets.DATABRICKS_CLIENT_ID_PROD }}
      #     DATABRICKS_CLIENT_ID_SECRET_DEV: ${{ secrets.DATABRICKS_CLIENT_ID_SECRET_DEV }}
      #     DATABRICKS_CLIENT_ID_SECRET_PROD: ${{ secrets.DATABRICKS_CLIENT_ID_SECRET_PROD }}
      #     DATABRICKS_INSTANCE_DEV: ${{ secrets.DATABRICKS_INSTANCE_DEV }}
      #     DATABRICKS_INSTANCE_PROD: ${{ secrets.DATABRICKS_INSTANCE_PROD }}
      #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
      #     ISSUE_BRANCH_NAME_MAIN: ${{ env.ISSUE_BRANCH_NAME_MAIN }}