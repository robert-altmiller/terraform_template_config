name: Create Terraform Json Payload

on:
  issues:
    types: [opened, edited]

jobs:

  branch-check:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check.outputs.skip }}
    
    steps:
    - name: Check if it's a feature branch
      id: check
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "::set-output name=skip::true"
        else
          echo "::set-output name=skip::false"
        fi

  get_issue_in_json:
    needs: branch-check
    if: needs.branch-check.outputs.skip == 'false'
    runs-on: ubuntu-latest
    
    env:
      ISSUE_TITLE: ${{ github.event.issue.title }}

    steps:

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Convert Github issues title to lowercase with underscore and put in env vars
        run: |    
          FORMATTED_TITLE=$(echo "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | sed 's/ /_/g')
          echo "ISSUE_TITLE=$FORMATTED_TITLE" >> $GITHUB_ENV
          echo ISSUE_TITLE: $FORMATTED_TITLE

      - name: Install jq
        run: sudo apt-get install jq

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/${{ env.ISSUE_TITLE }}_request.yml

      - name: Output issue parser JSON results 
        run: cat ${HOME}/issue-parser-result.json

      - name: Write issue submission JSON file to local Terraform Template Config repo and environment to environment vars
        run: |
          echo '${{ steps.issue-parser.outputs.jsonString }}' > issue_submission/issue_submission.json
          ISSUE_JSON=$(cat issue_submission/issue_submission.json)
          ISSUE_ENVIRONMENT=$(echo $ISSUE_JSON | jq -r .environment)
          echo "ISSUE_ENVIRONMENT=$ISSUE_ENVIRONMENT" >> $GITHUB_ENV

      # - name: Fetch Terraform Json master config JSON file from the target repo
      #   run: |
      #     curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" -H "Accept: application/vnd.github.v3.raw" -o master_config.json \
      #       "https://raw.githubusercontent.com/robert-altmiller/terraform_template/main/master_tfstate/${{ env.ISSUE_ENVIRONMENT }}/storage_credential.json"

      - name: Append / Remove issue submission to / from master config JSON file
        run: |
          ISSUE_JSON=$(cat issue_submission/issue_submission.json)
          echo ISSUE_JSON: $ISSUE_JSON
          MASTER_CONFIG_JSON=$(cat master_tfstate/${{ env.ISSUE_ENVIRONMENT }}/${{ env.ISSUE_TITLE }}.json)
          echo MASTER_CONFIG_JSON: $MASTER_CONFIG_JSON
          ISSUE_RESOURCE_NAME=$(echo $ISSUE_JSON | jq -r .resource_name)
          ISSUE_ACTION=$(echo $ISSUE_JSON | jq -r .create_or_delete)
          if [[ "$ISSUE_ACTION" == "Create" ]]; then
            UPDATED_MASTER_CONFIG=$(echo $MASTER_CONFIG_JSON | jq ".${{ env.ISSUE_TITLE }}.\"$ISSUE_RESOURCE_NAME\" = $ISSUE_JSON")
          elif [[ "$ISSUE_ACTION" == "Destroy" ]]; then
            UPDATED_MASTER_CONFIG=$(echo $MASTER_CONFIG_JSON | jq "del(.${{ env.ISSUE_TITLE }}.\"$ISSUE_RESOURCE_NAME\")")
          else
            echo "Unknown ISSUE_ACTION: $ISSUE_ACTION"
            exit 1
          fi
          echo UPDATED_MASTER_CONFIG: $UPDATED_MASTER_CONFIG
          echo "$UPDATED_MASTER_CONFIG" > issue_submission/issue_submission.json

      - name: Commit updated issue submission JSON file to Terraform Config repo
        shell: bash
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com" && \
          git config --global user.name "github-actions[bot]" && \
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/robert-altmiller/terraform_template_config.git
          git pull && \
          git add issue_submission/issue_submission.json && \
          git commit -m 'new infrastructure submission' && \
          git push


          # github refname is the branch, and the github event repository name is the name of the repository and server_url is the base url
          echo export REF_GITHUB_URL=${{ github.server_url }}/${{ github.event.repository.name }} > issue_submission/env.sh

          echo server url ${{ github.server_url }} github refname  ${{ github.ref_name }} ${{ github.event.repository.name }}